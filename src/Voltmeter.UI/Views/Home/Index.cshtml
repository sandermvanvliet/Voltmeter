@{
    ViewData["Title"] = "Home Page";
}
@model EnvironmentStatusModel

<style>
    #canvas {
        width: 100%;
        height: 95%;
        border: 1px solid lightgray;
    }
    #nodeDetails {
        border: 1px solid lightgray;
        width: 300px;
        height: 100px;
    }
</style>

<h2>Overview of @Html.DropDownList(
                    "environment", 
                    Model.AvailableEnvironments.Select(e => new SelectListItem{Text = e, Value = e, Selected = e == Model.Environment}), 
                    "Select environment to display",
                    new
                    {
                        onchange = "environmentSelected(this.value)"
                    })</h2>

<div id="canvas"></div>

@*<div id="nodeDetails"></div>*@

@section Scripts
{
    <script type="text/javascript">
        window.onload = function() { 
            window.nodes = new vis.DataSet([
                @foreach (var node in Model.Services)
                {
                    var borderColor = node.IsExternal ? "#" : "#000000";
                    var backgroundColor = node.IsExternal ? "#ffffff" : "";
                    WriteLiteral($"{{ id: {node.Id}, label: '{node.Name}', level: {node.Level}, title: '{node.Info}', url: '{node.Location}', color: {{ border: '{borderColor}', background: '{backgroundColor}'}} }},");
                }
            ]);

            window.edges = new vis.DataSet([
                @foreach (var edge in Model.Edges)
                {
                    WriteLiteral($"{{ from: {edge.From}, to: {edge.To}, arrows:'to', color: {{ color: '{edge.Color}'}} }},");
                }
            ]);

            var container = document.getElementById('canvas');
            container.style.height = (window.innerHeight - container.offsetTop - 4)+'px';

            var data = {
                nodes: nodes,
                edges: edges
            };
            var options = {
                "layout": {
                    "randomSeed": 2
                },
                "nodes": {
                    "borderWidth": 2,
                    "shape": "box"
                },
                "edges": {
                    "smooth": false
                },
                "interaction": {
                    "dragNodes": false,
                    "hover": true
                },
                "physics": {
                    "hierarchicalRepulsion": {
                        "centralGravity": 0,
                        "nodeDistance": 200
                    },
                    "minVelocity": 0.75,
                    "solver": "hierarchicalRepulsion"
                }
            };
            var network = new vis.Network(container, data, options);
            network.on("click",
                function(data) {
                    if (data.nodes.length === 1) {
                        displayNodeInfo(data.nodes[0]);
                    }
                });
        };

        function environmentSelected(environment) {
            var targetLocation = window.location.origin + '/home/index/' + environment;

            window.location = targetLocation;
        }

        function displayNodeInfo(nodeId) {
            console.log('displaying data for node ' + nodeId);
            var node = nodes.get(nodeId);

            if (!node.url || node.url.length < 1) {
                return;
            }

            var req = new XMLHttpRequest();
            req.onload = function (e) {
                //document.getElementById("nodeDetails").innerHTML = e.target.responseText;
            };
            req.open("GET", "/home/nodedetails/?url=" + node.url);
            req.send();
        }
    </script>
}